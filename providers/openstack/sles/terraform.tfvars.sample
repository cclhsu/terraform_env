# Name of the image to use
# EXAMPLE:
# image_name = "SLES15-SP2-JeOS.x86_64-15.3-OpenStack-Cloud-GM"
# image_name = "SLES15-SP2-JeOS.x86_64-15.3-OpenStack-Cloud-QU2"
image_name = "SLE-15-SP2-JeOS-GM"

# Name of the internal network to be created
# EXAMPLE:
# internal_net = "sles"
internal_net = "sles-101-net"

# Name of the internal subnet to be created
# IMPORTANT: If this variable is not set or empty,
# then it will be generated with schema
# internal_subnet = "${var.internal_net}-subnet"
# EXAMPLE:
# internal_subnet = "sles-subnet"
internal_subnet = "sles-101-subnet"

# CIDR of the subnet for the internal network
# EXAMPLE:
# subnet_cidr = "172.28.0.0/24"
subnet_cidr = "172.28.10.0/24"

# Name of the internal router to be created
# IMPORTANT: If this variable is not set or empty,
# then it will be generated with schema
# internal_router = "${var.internal_net}-router"
# EXAMPLE:
# internal_router = "sles-router"
internal_router = "sles-101-router"

# Name of the external network to be used, the one used to allocate floating IPs
# EXAMPLE:
# external_net = "floating"
external_net = "floating"

# Identifier to make all your resources unique and avoid clashes with other users of this terraform project
# stack_name = "my-sles-cluster"
stack_name = "sles-101"

# Number of etcd nodes
# etcds = 3
etcds = 0

# Size of the etcd nodes
# EXAMPLE:
# etcd_size = "m1.medium"
etcd_size = "m1.medium"

# Attach persistent volumes to etcds
etcds_vol_enabled = false

# Size of the etcd volumes in GB
etcds_vol_size = 5

# Number of storage nodes
# storages = 3
storages = 0

# Size of the storage nodes
# EXAMPLE:
# storage_size = "m1.medium"
storage_size = "m1.medium"

# Attach persistent volumes to storages
storages_vol_enabled = false

# Size of the storage volumes in GB
storages_vol_size = 5

# Number of master nodes
# masters = 1
masters = 1

# Size of the master nodes
# EXAMPLE:
# master_size = "m1.medium"
master_size = "m1.medium"

# Attach persistent volumes to masters
masters_vol_enabled = false

# Size of the master volumes in GB
masters_vol_size = 5

# Number of worker nodes
# workers = 3
workers = 2

# Size of the worker nodes
# EXAMPLE:
# worker_size = "m1.medium"
worker_size = "m1.medium"

# Attach persistent volumes to workers
workers_vol_enabled = false

# Size of the worker volumes in GB
workers_vol_size = 5

# Name of DNS domain
# dnsdomain = "my.domain.com"
dnsdomain = "sles.example.com"

# Set DNS Entry
dnsentry = false

# Username for the cluster nodes
# EXAMPLE:
username = "sles"

# Password for the cluster nodes
# EXAMPLE:
password = "linux"

# Optional: Define the repositories to use
# EXAMPLE:
# repositories = {
#   repository1 = "http://example.my.repo.com/repository3/"
#   repository2 = "http://example.my.repo.com/repository4/"
# }
# repositories = {}

# repositories = {
#   sle15sp2_pool = "http://download.suse.de/ibs/SUSE:/SLE-15-SP2:/GA/standard/"
#   sle15sp2_update = "http://download.suse.de/ibs/SUSE:/SLE-15-SP2:/Update/standard/"
#   sle15_pool = "http://download.suse.de/ibs/SUSE:/SLE-15:/GA/standard/"
#   sle15_update = "http://download.suse.de/ibs/SUSE:/SLE-15:/Update/standard/"
#   caasp = "http://download.suse.de/ibs/SUSE:/SLE-15-SP2:/Update:/Products:/CASP40/standard"
#   sle15_debuginfo_pool = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Basesystem/15/x86_64/product_debug/"
#   sle15sp2_debuginfo_pool = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Basesystem/15-SP2/x86_64/product_debug/"
# }

repositories = {
  caasp_devel             = "http://download.suse.de/ibs/Devel:/CaaSP:/4.0/SLE_15_SP2/"
  suse_ca                 = "http://download.suse.de/ibs/SUSE:/CA/SLE_15_SP2/"
  sle_server_pool         = "http://download.suse.de/ibs/SUSE/Products/SLE-Product-SLES/15-SP2/x86_64/product/"
  basesystem_pool         = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Basesystem/15-SP2/x86_64/product/"
  containers_pool         = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Containers/15-SP2/x86_64/product/"
  serverapps_pool         = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Server-Applications/15-SP2/x86_64/product/"
  sle_server_updates      = "http://download.suse.de/ibs/SUSE/Updates/SLE-Product-SLES/15-SP2/x86_64/update/"
  basesystem_updates      = "http://download.suse.de/ibs/SUSE/Updates/SLE-Module-Basesystem/15-SP2/x86_64/update/"
  containers_updates      = "http://download.suse.de/ibs/SUSE/Updates/SLE-Module-Containers/15-SP2/x86_64/update/"
  serverapps_updates      = "http://download.suse.de/ibs/SUSE/Updates/SLE-Module-Server-Applications/15-SP2/x86_64/update/"
  sle15sp2_pool           = "http://download.suse.de/ibs/SUSE:/SLE-15-SP2:/GA/standard/"
  sle15sp2_update         = "http://download.suse.de/ibs/SUSE:/SLE-15-SP2:/Update/standard/"
  sle15_debuginfo_pool    = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Basesystem/15/x86_64/product_debug/"
  sle15sp2_debuginfo_pool = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Basesystem/15-SP2/x86_64/product_debug/"
}

# Minimum required packages. Do not remove them.
# Feel free to add more packages
packages = [
  "kernel-default",
  "-kernel-default-base",
  "ca-certificates-suse",
]

# ssh keys to inject into all the nodes
# EXAMPLE:
# authorized_keys = [
#  "ssh-rsa <key-content>"
# ]
authorized_keys = [

]

# ssh key to launch the nodes with
# EXAMPLE:
# key_pair = "my_keypair"
key_pair = ""

# IMPORTANT: Replace these ntp servers with ones from your infrastructure
ntp_servers = ["TIME.google.com", "TIME1.google.com", "TIME2.google.com", "TIME3.google.com", "TIME4.google.com"]

# DNS servers for the nodes
# dns_nameservers = [
#     "172.28.0.2",
#     "8.8.8.8",
#     "8.8.4.4",
#     "1.1.1.1",
#     "1.0.0.1",
#     "168.95.1.1",
#     "168.95.192.1"
# ]
dns_nameservers = [
  "8.8.8.8",
  "8.8.4.4"
]
