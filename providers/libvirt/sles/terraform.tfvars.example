# URL of the libvirt server
# EXAMPLE:
# libvirt_uri = "qemu:///system"
# libvirt_uri = "qemu:///session"
# libvirt_uri = "qemu+ssh://root@192.168.100.10/system"

# Path of the key file used to connect to the libvirt server
# Note this value will be appended to the libvirt_uri as a 'keyfile' query: <libvirt_uri>?keyfile=<libvirt_keyfile>
# EXAMPLE:
# libvirt_keyfile = "~/.ssh/custom_id"
libvirt_keyfile = ""

# # # Pool to be used to store all the volumes
# pool = "pool"

# URL of the image to use
# EXAMPLE:
# lb_image_uri = "CentOS-7-x86_64-GenericCloud.qcow2"
# lb_image_uri = "https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2"
# lb_image_uri = "/home/cclhsu/Documents/myImages/kvm/centos/CentOS-7-x86_64-GenericCloud.qcow2"
# lb_image_uri = "/Users/clark_hsu/Documents/myImages/kvm/centos/CentOS-7-x86_64-GenericCloud.qcow2"
# lb_image_uri = "/home/cclhsu/Documents/myImages/kvm/debian/debian-10.5.0-openstack-amd64.qcow2"
# lb_image_uri = "/home/cclhsu/Documents/myImages/kvm/opensuse/openSUSE-Leap-15.2-OpenStack.x86_64.qcow2"
# lb_image_uri = "/home/cclhsu/Documents/myImages/kvm/ubuntu/ubuntu-18.04-server-cloudimg-amd64.img"

# URL of the image to use
# EXAMPLE:
# image_uri = "SLES15-SP2-JeOS.x86_64-15.2-OpenStack-Cloud-GM.qcow2"
# image_uri = "SLES15-SP2-JeOS.x86_64-15.2-OpenStack-Cloud-QU1.qcow2"
# image_uri = "http://download.suse.de/ibs/SUSE:/SLE-15-SP2:/GA/images/SLES15-SP2-JeOS.x86_64-15.2-OpenStack-Cloud${BUILD_NUMBER}.qcow2"
# image_uri = "http://download.suse.de/ibs/SUSE:/SLE-15-SP2:/Update:/QR/images/SLES15-SP2-JeOS.x86_64-15.2-OpenStack-Cloud-${BUILD_NUMBER}.qcow2"
# image_uri = "/home/cclhsu/Documents/myImages/kvm/sles/SLES15-SP2-CHOST-BYOS.x86_64-1.0.5-OpenStack-Build1.9.qcow2"
image_uri = "/home/cclhsu/Documents/myImages/kvm/sles/SLES15-SP2-JeOS.x86_64-15.2-OpenStack-Cloud-Build15.33.qcow2"

# Identifier to make all your resources unique and avoid clashes with other users of this terraform project
# stack_name = "my-sles-cluster"
stack_name = "sles"

# CIDR of the network
network_cidr = "10.17.0.0/18"

# Enable creation of LB node
create_lb = true

# Number of etcd nodes
etcds = 0
etcd_memory = 5120

# Number of storage nodes
storages = 0
storage_memory = 5120

# Number of master nodes
masters       = 1
master_memory = 5120

# Number of worker nodes
workers       = 1
worker_memory = 5120

# Name of DNS domain
dns_domain = "sles.local"

# Username for the cluster nodes
# EXAMPLE:
username = "sles"

# Password for the cluster nodes
# EXAMPLE:
password = "linux"

# define the repositories to use for the loadbalancer node
# EXAMPLE:
# lb_repositories = {
#   repository1 = "http://example.my.repo.com/repository1/"
#   repository2 = "http://example.my.repo.com/repository2/"
# }
lb_repositories = {
  sle_server_pool    = "http://download.suse.de/ibs/SUSE/Products/SLE-Product-SLES/15-SP2/x86_64/product/"
  basesystem_pool    = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Basesystem/15-SP2/x86_64/product/"
  ha_pool            = "http://download.suse.de/ibs/SUSE/Products/SLE-Product-HA/15-SP2/x86_64/product/"
  ha_updates         = "http://download.suse.de/ibs/SUSE/Updates/SLE-Product-HA/15-SP2/x86_64/update/"
  sle_server_updates = "http://download.suse.de/ibs/SUSE/Updates/SLE-Product-SLES/15-SP2/x86_64/update/"
  basesystem_updates = "http://download.suse.de/ibs/SUSE/Updates/SLE-Module-Basesystem/15-SP2/x86_64/update/"
}

# Optional: Define the repositories to use
# EXAMPLE:
# repositories = {
#   repository1 = "http://example.my.repo.com/repository3/"
#   repository2 = "http://example.my.repo.com/repository4/"
# }
# repositories = {
#   sle15sp2_pool = "http://download.suse.de/ibs/SUSE:/SLE-15-SP2:/GA/standard/"
#   sle15sp2_update = "http://download.suse.de/ibs/SUSE:/SLE-15-SP2:/Update/standard/"
#   sle15_pool = "http://download.suse.de/ibs/SUSE:/SLE-15:/GA/standard/"
#   sle15_update = "http://download.suse.de/ibs/SUSE:/SLE-15:/Update/standard/"
#   caasp = "http://download.suse.de/ibs/SUSE:/SLE-15-SP2:/Update:/Products:/CASP40/standard"
#   sle15_debuginfo_pool = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Basesystem/15/x86_64/product_debug/"
#   sle15sp2_debuginfo_pool = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Basesystem/15-SP2/x86_64/product_debug/"
# }
repositories = {
  caasp_devel             = "http://download.suse.de/ibs/Devel:/CaaSP:/4.0/SLE_15_SP2/"
  suse_ca                 = "http://download.suse.de/ibs/SUSE:/CA/SLE_15_SP2/"
  sle_server_pool         = "http://download.suse.de/ibs/SUSE/Products/SLE-Product-SLES/15-SP2/x86_64/product/"
  basesystem_pool         = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Basesystem/15-SP2/x86_64/product/"
  containers_pool         = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Containers/15-SP2/x86_64/product/"
  serverapps_pool         = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Server-Applications/15-SP2/x86_64/product/"
  sle_server_updates      = "http://download.suse.de/ibs/SUSE/Updates/SLE-Product-SLES/15-SP2/x86_64/update/"
  basesystem_updates      = "http://download.suse.de/ibs/SUSE/Updates/SLE-Module-Basesystem/15-SP2/x86_64/update/"
  containers_updates      = "http://download.suse.de/ibs/SUSE/Updates/SLE-Module-Containers/15-SP2/x86_64/update/"
  serverapps_updates      = "http://download.suse.de/ibs/SUSE/Updates/SLE-Module-Server-Applications/15-SP2/x86_64/update/"
  sle15sp2_pool           = "http://download.suse.de/ibs/SUSE:/SLE-15-SP2:/GA/standard/"
  sle15sp2_update         = "http://download.suse.de/ibs/SUSE:/SLE-15-SP2:/Update/standard/"
  sle15_debuginfo_pool    = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Basesystem/15/x86_64/product_debug/"
  sle15sp2_debuginfo_pool = "http://download.suse.de/ibs/SUSE/Products/SLE-Module-Basesystem/15-SP2/x86_64/product_debug/"
}

# Minimum required packages. Do not remove them.
# Feel free to add more packages
packages = [
  "zypper-needs-restarting",
  "kernel-default",
  "-kernel-default-base",
  "ca-certificates-suse",
  "python3",
  "python3-apt",
  "python-apt",
  "openssl",
  "gdb",
  "systemd-coredump",
  "lz4"
]

# ssh keys to inject into all the nodes
# EXAMPLE:
# authorized_keys = [
#  "ssh-rsa <key-content>"
# ]
authorized_keys = [
  ""
]

# ssh key on openstack to launch the nodes with
# EXAMPLE:
# key_pair = "my_keypair"

# IMPORTANT: Replace these ntp servers with ones from your infrastructure
ntp_servers = ["TIME.google.com", "TIME1.google.com", "TIME2.google.com", "TIME3.google.com", "TIME4.google.com"]

# DNS servers for the nodes
# dns_nameservers = [
#     "172.28.0.2",
#     "8.8.8.8",
#     "8.8.4.4",
#     "1.1.1.1",
#     "1.0.0.1",
#     "168.95.1.1",
#     "168.95.192.1"
# ]
dns_nameservers = [
  "8.8.8.8",
  "8.8.4.4"
]

# Set node's hostname from DHCP server
#hostname_from_dhcp = false
